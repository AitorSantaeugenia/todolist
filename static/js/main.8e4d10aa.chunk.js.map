{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","console","log","class","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,I,kCC8BEA,MAzBjB,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEzB,OAAO,qBAAKC,UAAU,OAAf,SACT,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QACzC,+BAEA,cAAC,IAAD,CAAiBH,UAAU,UAAUU,QAAS,WAC1Cf,EAAMgB,WAAWZ,EAAKI,MACvBS,KAAK,gBARyBb,EAAKI,QAa1C,OAAO,8BACH,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCjBTmB,IAAQC,IAAIC,K,IAiFGC,E,kDA9Ed,WAAYvB,GAAQ,IAAD,8BAClB,cAAMA,IACDwB,MAAQ,CACZtB,MAAO,GACPuB,YAAa,CACZf,KAAM,GACNF,IAAK,KAGP,EAAKkB,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZC,E,2CAcnB,SAAQf,GACPA,EAAEiB,iBACF,IAAMC,EAAUC,KAAKP,MAAMC,YAC3B,GAAqB,KAAjBK,EAAQpB,KAAa,CACxB,IAAMR,EAAK,sBAAQ6B,KAAKP,MAAMtB,OAAnB,CAA0B4B,IACrCC,KAAKC,SAAS,CACb9B,MAAOA,EACPuB,YAAa,CACZf,KAAM,GACNF,IAAK,S,yBAKT,SAAYI,GACXmB,KAAKC,SAAS,CACbP,YAAa,CACZf,KAAME,EAAEE,OAAOL,MACfD,IAAKyB,KAAKC,W,wBAIb,SAAW1B,GACV,IAAM2B,EAAgBJ,KAAKP,MAAMtB,MAAMkC,QAAO,SAAChC,GAAD,OAAUA,EAAKI,MAAQA,KACrEuB,KAAKC,SAAS,CACb9B,MAAOiC,M,uBAGT,SAAUzB,EAAMF,GACf6B,QAAQC,IAAI,SAAWP,KAAKP,MAAMtB,OAClC,IAAMA,EAAQ6B,KAAKP,MAAMtB,MACzBA,EAAMC,KAAI,SAACC,GACNA,EAAKI,MAAQA,IAChB6B,QAAQC,IAAIlC,EAAKI,IAAM,OAASA,GAChCJ,EAAKM,KAAOA,MAGdqB,KAAKC,SAAS,CACb9B,MAAOA,M,oBAGT,WACC,OACC,sBAAKG,UAAU,MAAf,UACC,oBAAIkC,MAAM,aAAV,2BACA,mCACC,uBAAMhC,GAAG,aAAaiC,SAAUT,KAAKL,QAArC,UACC,uBACCpB,KAAK,OACLmC,YAAY,aACZhC,MAAOsB,KAAKP,MAAMC,YAAYf,KAC9BC,SAAUoB,KAAKH,cAEhB,wBAAQtB,KAAK,SAAb,oBAED,4BAAIyB,KAAKP,MAAMtB,MAAMQ,OAErB,cAAC,EAAD,CAAWR,MAAO6B,KAAKP,MAAMtB,MAAOc,WAAYe,KAAKf,WAAYH,UAAWkB,KAAKlB,sB,GAxEpE6B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e4d10aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n         <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n        }} icon=\"trash\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default ListItems;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tcurrentItem: {\n\t\t\t\ttext: '',\n\t\t\t\tkey: ''\n\t\t\t}\n\t\t};\n\t\tthis.addItem = this.addItem.bind(this);\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.deleteItem = this.deleteItem.bind(this);\n\t\tthis.setUpdate = this.setUpdate.bind(this);\n\t}\n\taddItem(e) {\n\t\te.preventDefault();\n\t\tconst newItem = this.state.currentItem;\n\t\tif (newItem.text !== '') {\n\t\t\tconst items = [ ...this.state.items, newItem ];\n\t\t\tthis.setState({\n\t\t\t\titems: items,\n\t\t\t\tcurrentItem: {\n\t\t\t\t\ttext: '',\n\t\t\t\t\tkey: ''\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleInput(e) {\n\t\tthis.setState({\n\t\t\tcurrentItem: {\n\t\t\t\ttext: e.target.value,\n\t\t\t\tkey: Date.now()\n\t\t\t}\n\t\t});\n\t}\n\tdeleteItem(key) {\n\t\tconst filteredItems = this.state.items.filter((item) => item.key !== key);\n\t\tthis.setState({\n\t\t\titems: filteredItems\n\t\t});\n\t}\n\tsetUpdate(text, key) {\n\t\tconsole.log('items:' + this.state.items);\n\t\tconst items = this.state.items;\n\t\titems.map((item) => {\n\t\t\tif (item.key === key) {\n\t\t\t\tconsole.log(item.key + '    ' + key);\n\t\t\t\titem.text = text;\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\titems: items\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1 class=\"textHeader\">TODO list APP</h1>\n\t\t\t\t<header>\n\t\t\t\t\t<form id=\"to-do-form\" onSubmit={this.addItem}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Enter task\"\n\t\t\t\t\t\t\tvalue={this.state.currentItem.text}\n\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<p>{this.state.items.text}</p>\n\n\t\t\t\t\t<ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}